#include <msp430.h>

#define         a0              r4
#define         a1              r5
#define         b0              r6
#define         b1              r7

#define         zeta            r9
#define         mul_res_lo      r10
#define         mul_res_hi      r11
#define         ptr_C           r12
#define         ptr_A           r13
#define         ptr_B           r14
#define         ptr_zeta        r15

#define         forstop         r8

ka_mont      macro   mul_low, mul_hi
                                                     
        
         
         mov    mul_low, &MPYS              
         mov    #-3327, &OP2 ; a*QINV
                  
         mov    &RESLO, &MPYS ; t*q
         mov    #3329, &OP2
         
         ;sub    &RESLO, mul_low
         sub   &RESHI, mul_hi ;  a - t*q 
         
         endm
         
PUBLIC asm_poly_basemul_kara          ; make the main label vissible outside this module
RSEG CODE              ; place program in 'CODE' segment

asm_poly_basemul_kara:

         push r4
         push r5
         push r6
         push r7
         push r8
         push r9
         push r10
         push r11
                
         mov    ptr_A, forstop
         add    #512, forstop
         
round1:         

         mov    0(ptr_A), a0
         mov    2(ptr_A), a1
         mov    0(ptr_B), b0
         mov    2(ptr_B), b1
         mov    0(ptr_zeta), zeta
         
         ;1
         mov    a1, &MPYS
         mov    b1, &OP2
         
         mov    &RESLO, mul_res_lo    
         mov    &RESHI, mul_res_hi
         
         ka_mont        mul_res_lo, mul_res_hi
         
         mov    mul_res_hi, &MPYS
         mov    zeta, &OP2
         
         mov    a0, &MACS     
         mov    b0, &OP2
         
         mov    &RESLO, mul_res_lo    
         mov    &RESHI, mul_res_hi
         
         ka_mont        mul_res_lo, mul_res_hi
         
         mov    mul_res_hi, 0(ptr_C)
         ;1 end

         ;3
         mov    a1, &MPYS
         mov    b0, &OP2
         
         mov    a0, &MACS
         mov    b1, &OP2         
         
         mov    &RESLO, mul_res_lo    
         mov    &RESHI, mul_res_hi
         
         ka_mont        mul_res_lo, mul_res_hi
         mov    mul_res_hi, 2(ptr_C)
         
round2:
         
         mov    4(ptr_A), a0
         mov    6(ptr_A), a1
         mov    4(ptr_B), b0
         mov    6(ptr_B), b1
         inv    zeta
         add    #1, zeta
         
         ;1
         mov    a1, &MPYS
         mov    b1, &OP2
         
         mov    &RESLO, mul_res_lo    
         mov    &RESHI, mul_res_hi
         
         ka_mont        mul_res_lo, mul_res_hi
         
         mov    mul_res_hi, &MPYS
         mov    zeta, &OP2
         
         mov    a0, &MACS     
         mov    b0, &OP2
         
         mov    &RESLO, mul_res_lo    
         mov    &RESHI, mul_res_hi
         
         ka_mont        mul_res_lo, mul_res_hi
         
         mov    mul_res_hi, 4(ptr_C)
         ;1 end

         ;3
         mov    a1, &MPYS
         mov    b0, &OP2
         
         mov    a0, &MACS
         mov    b1, &OP2         
         
         mov    &RESLO, mul_res_lo    
         mov    &RESHI, mul_res_hi
         
         ka_mont        mul_res_lo, mul_res_hi
         mov    mul_res_hi, 6(ptr_C)
         
         add    #8, ptr_A
         add    #8, ptr_B
         add    #8, ptr_C
         add    #2, ptr_zeta
         
         cmp    forstop, ptr_A
         jn     round1
         
         pop    r11
         pop    r10
         pop    r9
         pop    r8
         pop    r7
         pop    r6
         pop    r5
         pop    r4
         
         RETA


END

